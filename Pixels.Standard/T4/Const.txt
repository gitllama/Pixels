<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension=".cs" #>

<# 
List<string> types = new List<string>{
	"Byte",
    "Int16",
    "Int24", 
    "Int32", 
    "Int64",
    "UInt16",
    "UInt24", 
    "UInt32", 
    "UInt64",
    "Single", 
    "Double",
    "Int16E",
    "Int24E", 
    "Int32E", 
    "Int64E",
    "UInt16E",
    "UInt24E", 
    "UInt32E", 
    "UInt64E",
    "SingleE", 
    "DoubleE" 
};

Dictionary<string, string> Blocks = new Dictionary<string, string>();

void SetBlocks(string _targetPath)
{
	var _src = File.ReadAllText(Host.ResolvePath(_targetPath));
	var _m = Regex.Matches(_src, @"T4\[(?<key>[\s\S]*?)\]\{(?<value>[\s\S]*?)\/\/\}T4");
	Blocks = _m.Cast<Match>().ToDictionary<Match, string, string>(k => k.Groups["key"].Value, v => v.Groups["value"].Value);
}

string AddBlock(string name, string code)
{
	Blocks.Add(name, code.Trim());
	return name;
}

string Clear(string name, string code)
{
	return name;
}

string CommentOut(string name, string code)
{
	return name;
}

#>